{"version":3,"sources":["app/app.module.js","app/components/locale/locale.service.js","app/components/locale/locale.constants.js","app/components/language/languages.constants.js","app/components/language/language.service.js","app/components/bot/bot.service.js","app/blocks/handlers/settings.handler.js","app/blocks/config/translation-storage.provider.js","app/blocks/config/localstorage.config.js","app/blocks/config/ translation.config.js","app/settings/settings.state.js","app/settings/settings.service.js","app/settings/settings.controller.js","app/services/snowcamp2017-replies.js","app/services/replies.service.js","app/services/mouth.service.js","app/services/microphone.service.js","app/services/luis.service.js","app/services/hears.service.js","app/services/brain.services.js","app/services/bing-speech.service.js","app/home/home.state.js","app/home/home.controller.js","i18n/angular-locale_fr.js","i18n/angular-locale_en.js","app/app.state.js","app/app.constants.js","templateCacheHtml.js"],"names":["run","settingssHandler","initialize","angular","module","$inject","LocaleService","LOCALES","getAll","service","factory","constant","LanguageService","$q","$translate","LANGUAGES","tmhDynamicLocale","getCurrent","deferred","defer","language","storage","get","resolve","promise","changeLanguage","locale","languageKey","slice","use","set","Bot","$log","$rootScope","Hears","Brain","Replies","Mouth","name","$name","useName","startListening","isListening","stopListening","debug","then","utterance","$emit","getIntent","text","predict","reply","intent","converse","expression","speak","synthesize","Settings","Luis","BingSpeech","DEFAULTS","update","load","settingsSavedSuccess","$on","event","settings","isDefined","config","general","stt","tts","nlp","useLocale","useSpeechToText","useGender","gender","useTextToSpeech","useNaturalLanguageProcessor","useSubscriptionKey","subscriptionKey","useApplication","application","translationStorageProvider","$cookies","indexOf","getObject","info","putObject","put","value","localStorageConfig","$localStorageProvider","$sessionStorageProvider","setKeyPrefix","translationConfig","$translateProvider","tmhDynamicLocaleProvider","useLoader","urlTemplate","preferredLanguage","useStorage","useSanitizeValueStrategy","addInterpolation","localeLocationPattern","useCookieStorage","storageKey","stateConfig","$stateProvider","state","parent","url","templateUrl","controller","controllerAs","translatePartialLoader","$translatePartialLoader","addPart","refresh","locales","luisApplications","getApplications","$localStorage","save","Object","assign","defaults","reset","SettingsController","$state","vm","go","this","languages","sttEngines","ttsEngines","nlpEngines","genders","luisApplciations","Snowcamp2017Replies","request","answer","data","status","$injector","useReplies","replies","$replies","$locale","$gender","$tts","getTTSInstance","Error","TextToSpeech","Microphone","$window","getAudioPermission","navigator","getUserMedia","audio","stream","error","reject","startRecording","recorder","RecordRTC","type","numberOfAudioChannels","recording","stopRecording","getBlob","isRecording","webkitGetUserMedia","mozGetUserMedia","LuisProvider","$http","$subscriptionKey","$application","getApplication","$luisApiUrl","headers","Ocp-Apim-Subscription-Key","response","map","Name","appId","ID","predictEndpoint","push","post","getJsonData","descOrder","a","b","score","intentResponse","IntentsResults","sort","utteranceText","entities","EntitiesResults","entity","word","indeces","start","startToken","end","endToken","$get","setLuisApiUrl","luisApiUrl","provider","$stt","$audio","getSTTInstance","sst","recognize","SpeechToText","$nlp","getNLPInstance","NaturalLanguageProcessor","BingSpeechProvider","uuid4","getToken","token","$BingSpeechApiUrl","params","version","requestid","generate","appID","format","device.os","scenarios","instanceid","Authorization","Content-Type","getSpeechResponse","font","$voices","ssml","$smmlTemplate","replace","responseType","Accept","X-Microsoft-OutputFormat","X-Search-AppId","X-Search-ClientID","speechResponse","header","lexical","charAt","toUpperCase","authenticationToken","tokenExpirationDate","Date","now","$issueTokenUrl","storeToken","$defaultSubscriptionKey","ar-EG female","de-DE female","de-DE male","en-AU female","en-CA female","en-GB female","en-GB male","en-IN male","en-US female","en-US male","es-ES female","es-ES male","es-MX male","fr-CA female","fr-FR female","fr-FR male","it-IT male","ja-JP female","ja-JP male","pt-BR male","ru-RU female","ru-RU male","zh-CN female","zh-CN male","zh-HK female","zh-HK male","zh-TW female","zh-TW male","useDefaultSubscriptionKey","defaultSubscriptionKey","HomeController","$scope","hotkeys","addBotMessage","message","values","getBotTranslated","getBotAudioUrl","audioUrl","messages","user","timestamp","getTime","content","image","addUserMessage","toggleRecording","process","handleRecordingError","handleBotResponse","handleConversationError","blob","Blob","URL","createObjectURL","submit","add","combo","description","instant","callback","$provide","PLURAL_CATEGORY","ZERO","ONE","TWO","FEW","MANY","OTHER","DATETIME_FORMATS","AMPMS","DAY","ERANAMES","ERAS","FIRSTDAYOFWEEK","MONTH","SHORTDAY","SHORTMONTH","STANDALONEMONTH","WEEKENDRANGE","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","NUMBER_FORMATS","CURRENCY_SYM","DECIMAL_SEP","GROUP_SEP","PATTERNS","gSize","lgSize","maxFrac","minFrac","minInt","negPre","negSuf","posPre","posSuf","id","localeID","pluralCat","n","opt_precision","i","getDecimals","length","getVF","v","undefined","Math","min","base","pow","f","vf","$urlRouterProvider","otherwise","abstract","template","$templateCache"],"mappings":"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","file":"../../scripts/app-e59102ece5.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular\n    .module('app', [\n      'ui.router',\n      'ui.bootstrap',\n      'ngStorage',\n      'ngCookies',\n      'uuid4',\n      'angularMoment',\n      'luegg.directives',\n      'ngCookies',\n      'tmh.dynamicLocale',\n      'pascalprecht.translate',\n      'cfp.hotkeys'\n    ]).run(run);\n\n  run.$inject = ['settingssHandler'];\n\n  function run(settingssHandler) {\n    settingssHandler.initialize();\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('LocaleService', LocaleService);\n\n  LocaleService.$inject = ['LOCALES'];\n\n  function LocaleService(LOCALES) {\n    var service = {\n      getAll: getAll\n    };\n\n    function getAll() {\n      return LOCALES;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n\n    /*\n     Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     They are written in English to avoid character encoding issues (not a perfect solution)\n     */\n    .constant('LOCALES', [\n      \"de-DE\",\n      \"es-ES\",\n      \"en-GB\",\n      \"en-US\",\n      \"fr-FR\",\n      \"it-IT\",\n      \"zh-CN\",\n      \"zh-TW\",\n      \"ja-JP\",\n      \"en-IN\",\n      \"pt-BR\",\n      \"ko-KR\",\n      \"fr-CA\",\n      \"en-AU\",\n      \"zh-HK\",\n      \"ar-EG\",\n      \"fi-FI\",\n      \"vpt-PT\",\n      \"en-NZ\",\n      \"pl-PL\",\n      \"en-CA\",\n      \"ru-RU\",\n      \"da-DK\",\n      \"nl-NL\",\n      \"ca-ES\",\n      \"nb-NO\",\n      \"es-MX\",\n      \"sv-SE\"\n    ]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n\n    /*\n     Languages codes are ISO_639-1 codes, see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n     They are written in English to avoid character encoding issues (not a perfect solution)\n     */\n    .constant('LANGUAGES', [\n      'en',\n      'fr'\n    ]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('LanguageService', LanguageService);\n\n  LanguageService.$inject = ['$q', '$translate', 'LANGUAGES', 'tmhDynamicLocale'];\n\n  function LanguageService($q, $translate, LANGUAGES, tmhDynamicLocale) {\n    var service = {\n      getAll: getAll,\n      getCurrent: getCurrent,\n      changeLanguage: changeLanguage\n    };\n\n    return service;\n\n    function getAll() {\n      return LANGUAGES;\n    }\n\n    function getCurrent() {\n      var deferred = $q.defer();\n      var language = $translate.storage().get('NG_TRANSLATE_LANG_KEY');\n      deferred.resolve(language);\n      return deferred.promise;\n    }\n\n    function changeLanguage(locale) {\n      var languageKey = locale.slice(0, 2);\n      if (languageKey) {\n        $translate.use(languageKey);\n        tmhDynamicLocale.set(languageKey);\n      }\n    }\n  }\n})();\n"," (function() {\n   'use strict';\n   angular\n     .module('app')\n     .factory('Bot', Bot);\n\n   Bot.$inject = ['$log', '$rootScope', 'Hears', 'Brain', 'Replies', 'Mouth'];\n\n   function Bot($log, $rootScope, Hears, Brain, Replies, Mouth) {\n     var service = {\n       startListening: startListening,\n       isListening: isListening,\n       stopListening: stopListening,\n       converse: converse,\n       speak: speak,\n       name: name,\n       useName: useName\n     };\n\n     var $name;\n\n     function name() {\n       return $name;\n     }\n\n     function useName(name) {\n       $name = name;\n     }\n\n     function startListening() {\n       Hears.startListening();\n     }\n\n     function isListening() {\n       return Hears.isListening();\n     }\n\n     function stopListening() {\n        $log.debug('There ');\n       return Hears.stopListening().then(function(utterance) {\n         $log.debug('Here ' + utterance);\n         $rootScope.$emit('bot:listened', utterance);\n         return utterance;\n       });\n     }\n\n     function getIntent(text) {\n       return Brain.predict(text);\n     }\n\n     function reply(intent) {\n       return Replies.reply(intent);\n     }\n\n     function converse(expression) {\n       return getIntent(expression).then(reply);\n     }\n\n     function speak(text) {\n       return Mouth.synthesize(text);\n     }\n\n     return service;\n   }\n })();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('settingssHandler', settingssHandler);\n\n  settingssHandler.$inject = ['$rootScope', 'Settings', 'Bot', 'Hears', 'Brain', 'Mouth', 'LanguageService', 'Luis', 'BingSpeech', 'DEFAULTS'];\n\n  function settingssHandler($rootScope, Settings, Bot, Hears, Brain, Mouth, LanguageService, Luis, BingSpeech, DEFAULTS) {\n    return {\n      initialize: initialize\n    };\n\n    function initialize() {\n      update(Settings.load());\n\n      var settingsSavedSuccess = $rootScope.$on('settings:saved', function (event, settings) {\n        update(settings);\n      });\n\n      $rootScope.$on('$destroy', function () {\n        if (angular.isDefined(settingsSavedSuccess) && settingsSavedSuccess !== null) {\n          settingsSavedSuccess();\n        }\n      });\n    }\n\n    function update(settings) {\n      var config = {\n        general: settings.general || DEFAULTS.general,\n        stt: settings.stt || DEFAULTS.stt,\n        tts: settings.tts || DEFAULTS.tts,\n        nlp: settings.nlp || DEFAULTS.nlp,\n        Luis: settings.Luis || DEFAULTS.Luis,\n        BingSpeech: settings.BingSpeech || DEFAULTS.BingSpeech\n      };\n      Bot.useName(config.general.name);\n      LanguageService.changeLanguage(config.general.language);\n      Hears.useLocale(config.stt.locale);\n      Hears.useSpeechToText(config.stt.service);\n      Mouth.useLocale(config.tts.locale);\n      Mouth.useGender(config.tts.gender);\n      Mouth.useTextToSpeech(config.tts.service);\n      Brain.useNaturalLanguageProcessor(config.nlp.service);\n      Luis.useSubscriptionKey(config.Luis.subscriptionKey);\n      Luis.useApplication(config.Luis.application);\n      BingSpeech.useSubscriptionKey(config.BingSpeech.subscriptionKey);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('translationStorageProvider', translationStorageProvider);\n\n  translationStorageProvider.$inject = ['$cookies', '$log', 'LANGUAGES'];\n\n  function translationStorageProvider($cookies, $log, LANGUAGES) {\n    return {\n      get: get,\n      put: put\n    };\n\n    function get(name) {\n      if (LANGUAGES.indexOf($cookies.getObject(name)) === -1) {\n        $log.info('Resetting invalid cookie language \"' + $cookies.getObject(name) + '\" to prefered language \"en\"');\n        $cookies.putObject(name, 'en');\n      }\n      return $cookies.getObject(name);\n    }\n\n    function put(name, value) {\n      $cookies.putObject(name, value);\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(localStorageConfig);\n\n  localStorageConfig.$inject = ['$localStorageProvider', '$sessionStorageProvider'];\n\n  function localStorageConfig($localStorageProvider, $sessionStorageProvider) {\n    $localStorageProvider.setKeyPrefix('goldorak-');\n    $sessionStorageProvider.setKeyPrefix('goldorak-');\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(translationConfig);\n\n  translationConfig.$inject = ['$translateProvider', 'tmhDynamicLocaleProvider'];\n\n  function translationConfig($translateProvider, tmhDynamicLocaleProvider) {\n    // Initialize angular-translate\n    $translateProvider.useLoader('$translatePartialLoader', {\n      urlTemplate: 'i18n/{lang}/{part}.json'\n    });\n\n    $translateProvider.preferredLanguage('en');\n    $translateProvider.useStorage('translationStorageProvider');\n    $translateProvider.useSanitizeValueStrategy('escaped');\n    $translateProvider.addInterpolation('$translateMessageFormatInterpolation');\n\n    tmhDynamicLocaleProvider.localeLocationPattern('i18n/angular-locale_{{locale}}.js');\n    tmhDynamicLocaleProvider.useCookieStorage();\n    tmhDynamicLocaleProvider.storageKey('NG_TRANSLATE_LANG_KEY');\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider'];\n\n  function stateConfig($stateProvider) {\n    $stateProvider\n      .state('settings', {\n        parent: 'app',\n        url: '/settings',\n        templateUrl: 'app/settings/settings.html',\n        controller: 'SettingsController',\n        controllerAs: 'vm',\n        resolve: {\n          translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n            $translatePartialLoader.addPart('settings');\n            $translatePartialLoader.addPart('global');\n            return $translate.refresh();\n          }],\n          locales: ['LocaleService', function (LocaleService) {\n            return LocaleService.getAll();\n          }],\n          luisApplications: ['Luis', function (Luis) {\n            return Luis.getApplications();\n          }]\n        }\n      });\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Settings', Settings);\n\n  Settings.$inject = ['$localStorage', '$log', '$rootScope', 'DEFAULTS'];\n\n  function Settings($localStorage, $log, $rootScope, DEFAULTS) {\n    var service = {\n      save: save,\n      load: load,\n      reset: reset\n    };\n\n    var defaults = DEFAULTS;\n\n    var settings = load();\n    if (!settings) {\n      save(defaults);\n    }\n\n    function save(settings) {\n      settings = Object.assign({}, defaults, settings);\n      $localStorage.settings = settings;\n      $rootScope.$emit('settings:saved', settings);\n    }\n\n    function load() {\n      return $localStorage.settings;\n    }\n\n    function reset() {\n      save(DEFAULTS);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('SettingsController', SettingsController);\n\n  SettingsController.$inject = ['$log', '$state', 'Settings', 'locales', 'luisApplications'];\n\n  function SettingsController($log, $state, Settings, locales, luisApplications) {\n    var vm = this;\n    vm.languages = ['en', 'fr'];\n    vm.sttEngines = [{\n      name: 'Microsoft BingSpeech',\n      service: 'BingSpeech'\n    }];\n    vm.ttsEngines = [{\n      name: 'Microsoft BingSpeech',\n      service: 'BingSpeech'\n    }];\n    vm.nlpEngines = [{\n      name: 'Microsoft Luis',\n      service: 'Luis'\n    }];\n    vm.genders = ['female', 'male'];\n    vm.save = save;\n    vm.reset = reset;\n    vm.settings = Settings.load();\n    vm.locales = locales;\n    vm.luisApplciations = luisApplications;\n\n    function save() {\n      Settings.save(vm.settings);\n      $state.go('home');\n    }\n\n    function reset() {\n      Settings.reset();\n      $state.go('home');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('Snowcamp2017Replies', Snowcamp2017Replies);\n\n  Snowcamp2017Replies.$inject = ['$log', '$q'];\n\n  function Snowcamp2017Replies($log, $q) {\n    var service = {\n      reply: reply\n    };\n\n    function reply(request) {\n//      $log.debug(request);\n      if (request.intent === 'Greetings') {\n        return answer(request, 'talk.greetings', {});\n      }\n      if (request.intent === 'GetSlides') {\n        return answer(request, 'talk.GetSlides', {});\n      }\n      return answer(request, 'talk.none', {expression: request.expression});\n    }\n\n    function answer(request, reply, data) {\n      var deferred = $q.defer();\n      deferred.resolve({\n        status: 'success',\n        reply: reply,\n        data: data,\n        request: request\n      });\n      return deferred.promise;\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .factory('Replies', Replies);\n\n  Replies.$inject = ['$injector'];\n\n  function Replies($injector) {\n    var service = {\n      useReplies: useReplies,\n      reply: reply\n    };\n\n    var $replies = $injector.get('Snowcamp2017Replies');\n\n    function useReplies(replies) {\n      $replies = replies;\n    }\n\n    function reply(intent) {\n      return $replies.reply(intent);\n    }\n\n    return service;\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Mouth', Mouth);\n\n  Mouth.$inject = ['$injector', '$log', '$rootScope'];\n\n  function Mouth($injector, $log, $rootScope) {\n\n    var service = {\n      synthesize: synthesize,\n      useLocale: useLocale,\n      useGender: useGender,\n      useTextToSpeech: useTextToSpeech\n    };\n\n    var $locale;\n    var $gender;\n    var $tts;\n\n    function useLocale(locale) {\n      $locale = locale;\n      $log.debug('Text To Speech Locale: ' + $locale);\n    }\n\n    function useGender(gender) {\n      $gender = gender;\n      $log.debug('Text To Speech Gender: ' + $gender);\n    }\n\n    function useTextToSpeech(tts) {\n      $tts = tts;\n      $log.debug('Text To Speech Engine: ' + $tts);\n    }\n\n    function locale() {\n      return $locale;\n    }\n\n    function getTTSInstance() {\n      if ($tts) {\n        return $injector.get($tts);\n      }\n      throw new Error('You must define a TextToSpeech engine');\n    }\n\n    function synthesize(text) {\n      var TextToSpeech = getTTSInstance();\n      $rootScope.$emit('hears:onSynthesize', {\n        tts: $tts,\n        locale: $locale,\n        gender: $gender,\n        text: text\n      });\n      return TextToSpeech.synthesize(text, $locale, $gender);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Microphone', Microphone);\n\n  Microphone.$inject = ['$log', '$q', '$window'];\n\n  function Microphone($log, $q, $window) {\n    var service = {\n      startRecording: startRecording,\n      stopRecording: stopRecording,\n      isRecording: isRecording\n    };\n\n    $window.navigator.getUserMedia = $window.navigator.getUserMedia || $window.navigator.webkitGetUserMedia || $window.navigator.mozGetUserMedia;\n\n    function getAudioPermission() {\n      var deferred = $q.defer();\n      $window.navigator.getUserMedia({\n        audio: true\n      }, function (stream) {\n        deferred.resolve(stream);\n      }, function (error) {\n        deferred.reject(error);\n      });\n      return deferred.promise;\n    }\n\n    var recording = false;\n    var recorder;\n\n    function startRecording() {\n      getAudioPermission()\n        .then(function (stream) {\n          recorder = new RecordRTC(stream, {\n            type: 'audio',\n            numberOfAudioChannels: 1\n          });\n          recorder.startRecording();\n          recording = true;\n        }).catch(function (error) {\n          $log.error(error);\n        });\n    }\n\n    function stopRecording() {\n      var deferred = $q.defer();\n      recorder.stopRecording(function () {\n        recording = false;\n        deferred.resolve(recorder.getBlob());\n      });\n      return deferred.promise;\n    }\n\n    function isRecording() {\n      return recording;\n    }\n\n    return service;\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .provider('Luis', LuisProvider);\n\n  LuisProvider.$inject = [];\n\n  function LuisProvider() {\n    this.$get = Luis;\n\n    var $luisApiUrl = 'https://westus.api.cognitive.microsoft.com/luis/v1.0/prog/apps';\n    this.setLuisApiUrl = function (luisApiUrl) {\n      $luisApiUrl = luisApiUrl;\n    };\n\n    Luis.$inject = ['$http', '$log', '$rootScope'];\n\n    function Luis($http, $log, $rootScope) {\n      var service = {\n        useSubscriptionKey: useSubscriptionKey,\n        useApplication: useApplication,\n        getApplication: getApplication,\n        getApplications: getApplications,\n        predict: predict\n      };\n\n      var $subscriptionKey;\n      var $application;\n\n      function useSubscriptionKey(subscriptionKey) {\n        $subscriptionKey = subscriptionKey;\n      }\n\n      function useApplication(application) {\n        $application = application;\n      }\n\n      function getApplication() {\n        return $application;\n      }\n\n      function getApplications() {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        return $http.get($luisApiUrl, {\n          headers: {\n            'Ocp-Apim-Subscription-Key': $subscriptionKey\n          }\n        }).then(function (response) {\n          var data = response.data;\n          return data.map(function (application) {\n            return {\n              name: application.Name,\n              appId: application.ID\n            };\n          });\n        });\n      }\n\n      function predict(utterance) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        if (!$application) {\n          throw new Error(\"You must define at least one Luis application\");\n        }\n        $rootScope.$emit('luis:predict', {\n          application: $application,\n          utterance: utterance\n        });\n        var predictEndpoint = $luisApiUrl + \"/\" + $application.appId + \"/predict\";\n        var data = [];\n        data.push(utterance);\n        return $http.post(predictEndpoint, data, {\n          headers: {\n            'Ocp-Apim-Subscription-Key': $subscriptionKey\n          }\n        }).then(function(response) {\n          return getIntent(getJsonData(response));\n        });\n      }\n\n      function getJsonData(response) {\n        if (response && response.status === 200) {\n          return response.data[0];\n        }\n        throw new Error(\"Natural Language Understanding failed\");\n      }\n\n      function descOrder(a, b) {\n        return b.score - a.score;\n      }\n\n      function getIntent(intentResponse) {\n        var intent = intentResponse.IntentsResults.sort(descOrder)[0].Name;\n        var expression = intentResponse.utteranceText;\n        var entities = intentResponse.EntitiesResults.map(function (entity) {\n          return {\n            name: entity.name,\n            word: entity.word,\n            indeces: {\n              start: entity.indeces.startToken,\n              end: entity.indeces.endToken\n            }\n          };\n        });\n\n        var response = {\n          application: $application,\n          expression: expression,\n          intent: intent,\n          entities: entities\n        };\n\n        $rootScope.$emit('luis:getIntent', response);\n        return response;\n      }\n\n      return service;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Hears', Hears);\n\n  Hears.$inject = ['$injector', '$log', '$rootScope', 'Microphone'];\n\n  function Hears($injector, $log, $rootScope, Microphone) {\n\n    var service = {\n      startListening: startListening,\n      isListening: Microphone.isRecording,\n      stopListening: stopListening,\n      locale: locale,\n      audio: audio,\n      useLocale: useLocale,\n      useSpeechToText: useSpeechToText\n    };\n\n    var $locale;\n    var $stt;\n    var $audio;\n\n    function useLocale(locale) {\n      $locale = locale;\n      $log.debug('Speech To Text Locale: ' + $locale);\n    }\n\n    function useSpeechToText(stt) {\n      $stt = stt;\n      $log.debug('Speech To Text Engine: ' + $stt);\n    }\n\n    function locale() {\n      return $locale;\n    }\n\n    function audio() {\n      return $audio;\n    }\n\n    function getSTTInstance() {\n      if ($stt) {\n        return $injector.get($stt);\n      }\n      throw new Error('You must define a SpeechToText engine');\n    }\n\n    function startListening() {\n      Microphone.startRecording();\n      $rootScope.$emit('hears:onStartListening', {\n        sst: $stt,\n        locale: $locale\n      });\n    }\n\n    function stopListening() {\n      $rootScope.$emit('hears:onStopListening', {\n        sst: $stt,\n        locale: $locale\n      });\n      return Microphone\n        .stopRecording()\n        .then(recognize);\n    }\n\n    function recognize(audio) {\n      $audio = audio;\n      var SpeechToText = getSTTInstance();\n      $rootScope.$emit('hears:onRecognize', {\n        sst: $stt,\n        locale: $locale,\n        audio: audio\n      });\n      return SpeechToText.recognize(audio, $locale);\n    }\n\n    return service;\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .factory('Brain', Brain);\n\n  Brain.$inject = ['$injector', '$log', '$rootScope'];\n\n  function Brain($injector, $log, $rootScope) {\n    var service = {\n      predict: predict,\n      useNaturalLanguageProcessor: useNaturalLanguageProcessor\n    };\n\n    var $nlp;\n\n    function useNaturalLanguageProcessor(nlp) {\n      $nlp = nlp;\n      $log.debug('Natural Language Processor Engine: ' + $nlp);\n    }\n\n    function getNLPInstance() {\n      if ($nlp) {\n        return $injector.get($nlp);\n      }\n      throw new Error('You must define a NaturalLanguageProcessor engine');\n    }\n\n    function predict(text) {\n      var NaturalLanguageProcessor = getNLPInstance();\n      $rootScope.$emit('brain:onProcess', {\n        nlp: $nlp,\n        text: text\n      });\n      return NaturalLanguageProcessor.predict(text);\n    }\n\n    return service;\n  }\n})();\n","(function() {\n  'use strict';\n  angular\n    .module('app')\n    .provider('BingSpeech', BingSpeechProvider);\n\n  BingSpeechProvider.$inject = [];\n\n  function BingSpeechProvider() {\n    //Inspired by https://github.com/palmerabollo/bingspeech-api-client\n    this.$get = BingSpeech;\n\n    var $defaultSubscriptionKey;\n    var $BingSpeechApiUrl = 'https://speech.platform.bing.com';\n    var $issueTokenUrl = 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken';\n\n    var $smmlTemplate = \"<speak version=\\\"1.0\\\" xml:lang=\\\"%LOCALE%\\\"> <voice name=\\\"%FONT%\\\" xml:lang=\\\"%LOCALE%\\\" xml:gender=\\\"%GENDER%\\\">%TEXT%</voice></speak>\";\n\n    var $voices = {\n      'ar-EG female': 'Microsoft Server Speech Text to Speech Voice (ar-EG, Hoda)',\n      'de-DE female': 'Microsoft Server Speech Text to Speech Voice (de-DE, Hedda)',\n      'de-DE male': 'Microsoft Server Speech Text to Speech Voice (de-DE, Stefan, Apollo)',\n      'en-AU female': 'Microsoft Server Speech Text to Speech Voice (en-AU, Catherine)',\n      'en-CA female': 'Microsoft Server Speech Text to Speech Voice (en-CA, Linda)',\n      'en-GB female': 'Microsoft Server Speech Text to Speech Voice (en-GB, Susan, Apollo)',\n      'en-GB male': 'Microsoft Server Speech Text to Speech Voice (en-GB, George, Apollo)',\n      'en-IN male': 'Microsoft Server Speech Text to Speech Voice (en-IN, Ravi, Apollo)',\n      'en-US female': 'Microsoft Server Speech Text to Speech Voice (en-US, ZiraRUS)',\n      'en-US male': 'Microsoft Server Speech Text to Speech Voice (en-US, BenjaminRUS)',\n      'es-ES female': 'Microsoft Server Speech Text to Speech Voice (es-ES, Laura, Apollo)',\n      'es-ES male': 'Microsoft Server Speech Text to Speech Voice (es-ES, Pablo, Apollo)',\n      'es-MX male': 'Microsoft Server Speech Text to Speech Voice (es-MX, Raul, Apollo)',\n      'fr-CA female': 'Microsoft Server Speech Text to Speech Voice (fr-CA, Caroline)',\n      'fr-FR female': 'Microsoft Server Speech Text to Speech Voice (fr-FR, Julie, Apollo)',\n      'fr-FR male': 'Microsoft Server Speech Text to Speech Voice (fr-FR, Paul, Apollo)',\n      'it-IT male': 'Microsoft Server Speech Text to Speech Voice (it-IT, Cosimo, Apollo)',\n      'ja-JP female': 'Microsoft Server Speech Text to Speech Voice (ja-JP, Ayumi, Apollo)',\n      'ja-JP male': 'Microsoft Server Speech Text to Speech Voice (ja-JP, Ichiro, Apollo)',\n      'pt-BR male': 'Microsoft Server Speech Text to Speech Voice (pt-BR, Daniel, Apollo)',\n      'ru-RU female': 'Microsoft Server Speech Text to Speech Voice (ru-RU, Irina, Apollo)',\n      'ru-RU male': 'Microsoft Server Speech Text to Speech Voice (ru-RU, Pavel, Apollo)',\n      'zh-CN female': 'Microsoft Server Speech Text to Speech Voice (zh-CN, Yaoyao, Apollo)',\n      'zh-CN male': 'Microsoft Server Speech Text to Speech Voice (zh-CN, Kangkang, Apollo)',\n      'zh-HK female': 'Microsoft Server Speech Text to Speech Voice (zh-HK, Tracy, Apollo)',\n      'zh-HK male': 'Microsoft Server Speech Text to Speech Voice (zh-HK, Danny, Apollo)',\n      'zh-TW female': 'Microsoft Server Speech Text to Speech Voice (zh-TW, Yating, Apollo)',\n      'zh-TW male': 'Microsoft Server Speech Text to Speech Voice (zh-TW, Zhiwei, Apollo)'\n    };\n\n    this.useDefaultSubscriptionKey = function(defaultSubscriptionKey) {\n      $defaultSubscriptionKey = defaultSubscriptionKey;\n    };\n\n    BingSpeech.$inject = ['$log', '$http', '$localStorage', '$q', 'uuid4'];\n\n    function BingSpeech($log, $http, $localStorage, $q, uuid4) {\n      var service = {\n        recognize: recognize,\n        synthesize: synthesize,\n        useSubscriptionKey: useSubscriptionKey\n      };\n\n      var $subscriptionKey;\n\n      function useSubscriptionKey(subscriptionKey) {\n        $subscriptionKey = subscriptionKey;\n      }\n\n      function recognize(audio, locale) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        $log.debug(\"Recognizing audio with locale: \" + locale);\n        return getToken($subscriptionKey).then(function(token) {\n            return $http.post($BingSpeechApiUrl + '/recognize', audio, {\n              params: {\n                'version': '3.0',\n                'requestid': uuid4.generate(),\n                'appID': 'D4D52672-91D7-4C74-8AD8-42B1D98141A5', // magic value as per MS docs,\n                'format': 'json',\n                'locale': locale,\n                'device.os': '0_0',\n                'scenarios': 'ulm',\n                'instanceid': uuid4.generate()\n              },\n              headers: {\n                'Authorization': 'Bearer ' + token,\n                'Content-Type': 'audio/wav; samplerate=44100'\n              }\n            });\n          })\n          .then(function(response) {\n            return getSpeechResponse(getJsonData(response));\n          });\n      }\n\n      function synthesize(text, locale, gender) {\n        if (!$subscriptionKey) {\n          throw new Error('You must set the subscriptionKey first');\n        }\n        var font = $voices[locale + \" \" + gender];\n        $log.debug(\"Synthetizing text \\\"\" + text + \"\\\" with locale: \" + locale + \", gender: \" + gender + \" and font: \" + font);\n        var ssml = $smmlTemplate\n          .replace(/%LOCALE%/gi, locale)\n          .replace(/%GENDER%/gi, gender)\n          .replace(/%FONT%/gi, font)\n          .replace(/%TEXT%/gi, text);\n        return getToken($subscriptionKey).then(function(token) {\n          return $http.post($BingSpeechApiUrl + '/synthesize', ssml, {\n            responseType: 'arraybuffer',\n            headers: {\n              'Accept': 'audio/basic',\n              'Authorization': 'Bearer ' + token,\n              'Content-Type': 'application/ssml+xml',\n              'X-Microsoft-OutputFormat': 'riff-8khz-8bit-mono-mulaw',\n              'X-Search-AppId': '07D3234E49CE426DAA29772419F436CA',\n              'X-Search-ClientID': '1ECFAE91408841A480F00935DC390960'\n            }\n          });\n        });\n      }\n\n      function getJsonData(response) {\n        if (response) {\n          return response.data;\n        }\n        throw new Error(\"Bing Speech recognition's reponse is empty\");\n      }\n\n      function getSpeechResponse(speechResponse) {\n        if (speechResponse.header.status === \"success\") {\n          var text = speechResponse.header.lexical;\n          $log.debug('Here: ' + text);\n          return text.charAt(0).toUpperCase() + text.slice(1);\n        }\n        throw new Error(\"Speech recognition failed\");\n      }\n\n      function getToken(subscriptionKey) {\n        var deferred = $q.defer();\n        var token = $localStorage.authenticationToken;\n        var tokenExpirationDate = $localStorage.tokenExpirationDate;\n\n        if (token && tokenExpirationDate > Date.now()) {\n          deferred.resolve(token);\n        } else {\n          $http.post($issueTokenUrl, {}, {\n            headers: {\n              'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n          }).then(function(response) {\n            token = response.data;\n            storeToken(token);\n            deferred.resolve(token);\n          }).catch(function(error) {\n            $log.error(\"Unable to authenticate the request with subscription key: \" + subscriptionKey);\n            deferred.reject(error);\n          });\n        }\n        return deferred.promise;\n      }\n\n      function storeToken(token) {\n        $localStorage.authenticationToken = token;\n        //      Refresh access token every 9 minutes\n        $localStorage.tokenExpirationDate = Date.now() + 9 * 60 * 1000;\n      }\n\n      return service;\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider'];\n\n  function stateConfig($stateProvider) {\n    $stateProvider\n      .state('home', {\n        parent: 'app',\n        url: '/',\n        templateUrl: 'app/home/home.html',\n        controller: 'HomeController',\n        controllerAs: 'vm',\n        resolve: {\n          translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n            $translatePartialLoader.addPart('talk');\n            $translatePartialLoader.addPart('home');\n            $translatePartialLoader.addPart('global');\n            $translatePartialLoader.addPart('speech/home');\n            $translatePartialLoader.addPart('speech/talk');\n            return $translate.refresh();\n          }]\n        }\n      });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('app')\n    .controller('HomeController', HomeController);\n\n  HomeController.$inject = ['$rootScope', '$scope', '$log', '$translate', '$q', 'hotkeys', 'Bot'];\n\n  function HomeController($rootScope, $scope, $log, $translate, $q, hotkeys, Bot) {\n    var vm = this;\n\n    vm.toggleRecording = toggleRecording;\n    vm.isRecording = Bot.isListening;\n    vm.submit = submit;\n    vm.messages = [];\n\n    hotkeys.add({\n      combo: 'ctrl+space',\n      description: $translate.instant('home.hotkey'),\n      callback: vm.toggleRecording\n    });\n\n    //welcomeMessage();\n\n    function welcomeMessage() {\n      addBotMessage('home.welcome', {\n        name: Bot.name()\n      });\n    }\n\n    function addBotMessage(message, values) {\n      $log.debug('message: ' + message);\n      getBotTranslated(message, values)\n        .then(getBotAudioUrl)\n        .then(function (audioUrl) {\n          vm.messages.push({\n            user: Bot.name(),\n            timestamp: new Date().getTime(),\n            content: message,\n            values: values,\n            audio: audioUrl,\n            image: 'bot'\n          });\n        });\n    }\n\n    function addUserMessage(message) {\n      vm.messages.push({\n        user: \"me\",\n        timestamp: new Date().getTime(),\n        content: message,\n        image: 'me'\n      });\n    }\n\n    function toggleRecording() {\n      if (Bot.isListening()) {\n        Bot.stopListening().then(process).catch(handleRecordingError);\n      } else {\n        Bot.startListening();\n      }\n    }\n\n    function process(request) {\n      addUserMessage(request);\n\n      Bot.converse(request)\n        .then(handleBotResponse)\n        .catch(handleConversationError);\n    }\n\n    function getBotTranslated(message, values) {\n      return $translate(\"speech.\" + message, values);\n    }\n\n    function getBotAudioUrl(text) {\n      var deferred = $q.defer();\n      Bot.speak(text).then(function(audio) {\n        var blob = new Blob([audio.data], {\n          type: \"audio/basic\"\n        });\n        deferred.resolve(URL.createObjectURL(blob));\n      });\n      return deferred.promise;\n    }\n\n    function handleBotResponse(response) {\n      addBotMessage(response.reply, response.data);\n    }\n\n    function handleRecordingError(error) {\n      addBotMessage('home.stt.failed', {});\n    }\n\n    function handleConversationError(error) {\n      addBotMessage(error.reply, error.data);\n    }\n\n    function submit() {\n      if (vm.text) {\n        process(vm.text);\n      }\n      vm.text = \"\";\n    }\n  }\n})();\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"dimanche\",\n      \"lundi\",\n      \"mardi\",\n      \"mercredi\",\n      \"jeudi\",\n      \"vendredi\",\n      \"samedi\"\n    ],\n    \"ERANAMES\": [\n      \"avant J\\u00e9sus-Christ\",\n      \"apr\\u00e8s J\\u00e9sus-Christ\"\n    ],\n    \"ERAS\": [\n      \"av. J.-C.\",\n      \"ap. J.-C.\"\n    ],\n    \"FIRSTDAYOFWEEK\": 0,\n    \"MONTH\": [\n      \"janvier\",\n      \"f\\u00e9vrier\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"ao\\u00fbt\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"d\\u00e9cembre\"\n    ],\n    \"SHORTDAY\": [\n      \"dim.\",\n      \"lun.\",\n      \"mar.\",\n      \"mer.\",\n      \"jeu.\",\n      \"ven.\",\n      \"sam.\"\n    ],\n    \"SHORTMONTH\": [\n      \"janv.\",\n      \"f\\u00e9vr.\",\n      \"mars\",\n      \"avr.\",\n      \"mai\",\n      \"juin\",\n      \"juil.\",\n      \"ao\\u00fbt\",\n      \"sept.\",\n      \"oct.\",\n      \"nov.\",\n      \"d\\u00e9c.\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"Janvier\",\n      \"F\\u00e9vrier\",\n      \"Mars\",\n      \"Avril\",\n      \"Mai\",\n      \"Juin\",\n      \"Juillet\",\n      \"Ao\\u00fbt\",\n      \"Septembre\",\n      \"Octobre\",\n      \"Novembre\",\n      \"D\\u00e9cembre\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE d MMMM y\",\n    \"longDate\": \"d MMMM y\",\n    \"medium\": \"d MMM y HH:mm:ss\",\n    \"mediumDate\": \"d MMM y\",\n    \"mediumTime\": \"HH:mm:ss\",\n    \"short\": \"dd/MM/y HH:mm\",\n    \"shortDate\": \"dd/MM/y\",\n    \"shortTime\": \"HH:mm\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"\\u20ac\",\n    \"DECIMAL_SEP\": \",\",\n    \"GROUP_SEP\": \"\\u00a0\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\\u00a0\\u00a4\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\\u00a0\\u00a4\"\n      }\n    ]\n  },\n  \"id\": \"fr\",\n  \"localeID\": \"fr\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  if (i == 0 || i == 1) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n","'use strict';\nangular.module(\"ngLocale\", [], [\"$provide\", function($provide) {\nvar PLURAL_CATEGORY = {ZERO: \"zero\", ONE: \"one\", TWO: \"two\", FEW: \"few\", MANY: \"many\", OTHER: \"other\"};\nfunction getDecimals(n) {\n  n = n + '';\n  var i = n.indexOf('.');\n  return (i == -1) ? 0 : n.length - i - 1;\n}\n\nfunction getVF(n, opt_precision) {\n  var v = opt_precision;\n\n  if (undefined === v) {\n    v = Math.min(getDecimals(n), 3);\n  }\n\n  var base = Math.pow(10, v);\n  var f = ((n * base) | 0) % base;\n  return {v: v, f: f};\n}\n\n$provide.value(\"$locale\", {\n  \"DATETIME_FORMATS\": {\n    \"AMPMS\": [\n      \"AM\",\n      \"PM\"\n    ],\n    \"DAY\": [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    \"ERANAMES\": [\n      \"Before Christ\",\n      \"Anno Domini\"\n    ],\n    \"ERAS\": [\n      \"BC\",\n      \"AD\"\n    ],\n    \"FIRSTDAYOFWEEK\": 6,\n    \"MONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"SHORTDAY\": [\n      \"Sun\",\n      \"Mon\",\n      \"Tue\",\n      \"Wed\",\n      \"Thu\",\n      \"Fri\",\n      \"Sat\"\n    ],\n    \"SHORTMONTH\": [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    \"STANDALONEMONTH\": [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    \"WEEKENDRANGE\": [\n      5,\n      6\n    ],\n    \"fullDate\": \"EEEE, MMMM d, y\",\n    \"longDate\": \"MMMM d, y\",\n    \"medium\": \"MMM d, y h:mm:ss a\",\n    \"mediumDate\": \"MMM d, y\",\n    \"mediumTime\": \"h:mm:ss a\",\n    \"short\": \"M/d/yy h:mm a\",\n    \"shortDate\": \"M/d/yy\",\n    \"shortTime\": \"h:mm a\"\n  },\n  \"NUMBER_FORMATS\": {\n    \"CURRENCY_SYM\": \"$\",\n    \"DECIMAL_SEP\": \".\",\n    \"GROUP_SEP\": \",\",\n    \"PATTERNS\": [\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 3,\n        \"minFrac\": 0,\n        \"minInt\": 1,\n        \"negPre\": \"-\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\",\n        \"posSuf\": \"\"\n      },\n      {\n        \"gSize\": 3,\n        \"lgSize\": 3,\n        \"maxFrac\": 2,\n        \"minFrac\": 2,\n        \"minInt\": 1,\n        \"negPre\": \"-\\u00a4\",\n        \"negSuf\": \"\",\n        \"posPre\": \"\\u00a4\",\n        \"posSuf\": \"\"\n      }\n    ]\n  },\n  \"id\": \"en\",\n  \"localeID\": \"en\",\n  \"pluralCat\": function(n, opt_precision) {  var i = n | 0;  var vf = getVF(n, opt_precision);  if (i == 1 && vf.v == 0) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}\n});\n}]);\n","(function () {\n  'use strict';\n\n  angular\n    .module('app')\n    .config(stateConfig);\n\n  stateConfig.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function stateConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n    $stateProvider.state('app', {\n      abstract: true,\n      template: '<ui-view class=\"fill\"/>',\n      resolve: {\n        translatePartialLoader: ['$translate', '$translatePartialLoader', function ($translate, $translatePartialLoader) {\n          $translatePartialLoader.addPart('global');\n          return $translate.refresh();\n        }]\n      }\n    });\n  }\n})();\n","(function () {\n  'use strict';\n  angular\n    .module('app')\n    .constant('DEFAULTS', {\n      general: {\n        language: 'fr',\n        name: 'Goldorak'\n      },\n      stt: {\n        name: 'Microsoft BingSpeech',\n        service: 'BingSpeech',\n        locale: 'fr-FR'\n      },\n      tts: {\n        name: 'Microsoft BingSpeech',\n        service: 'BingSpeech',\n        locale: 'fr-FR',\n        gender: 'male'\n      },\n      nlp: {\n        name: 'Microsoft Luis',\n        service: 'Luis'\n      },\n      BingSpeech: {\n        subscriptionKey: '8fb1a8c7b61a41d4838ddc60d84e6601'\n      },\n      Luis: {\n        subscriptionKey: \"ebc99ea1bfe8481d9c01f8145a553187\",\n        application: {\n          name: \"snowcamp 2017\",\n          appId: \"56760a0c-fca1-43bc-b4d2-a864b4c04ced\"\n        }\n      }\n    });\n})();\n","angular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/home/home.html\",\"<div class=\\\"fill\\\">\\n\t<div class=\\\"container content mt-3\\\" scroll-glue>\\n\t\t<div class=\\\"row mb-2\\\" ng-repeat=\\\"message in vm.messages\\\">\\n\t\t\t<div class=\\\"col-3 col-sm-1\\\">\\n\t\t\t\t<img class=\\\"rounded img-fluid\\\" ng-src=\\\"content/images/{{message.image}}.png\\\">\\n\t\t\t</div>\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<div class=\\\"card\\\" ng-class=\\\"message.user == \\'me\\' ? \\'card-outline-warning\\' : \\'card-outline-info\\'\\\">\\n\t\t\t\t\t<div class=\\\"card-block\\\">\\n\t\t\t\t\t\t<span class=\\\"card-title\\\"><strong class=\\\"capitalize\\\">{{message.user}}</strong></span>\\n\t\t\t\t\t\t<span class=\\\"card-subtitle\\\"><small class=\\\"ml-1 text-muted\\\">{{message.timestamp | amDateFormat: \\'HH:mm\\'}}</small></span>\\n\t\t\t\t\t\t<p class=\\\"card-text\\\" translate=\\\"{{message.content}}\\\" translate-values=\\\"{{message.values}}\\\"></p>\\n\t\t\t\t\t\t<audio ng-show=\\\"message.user != \\'me\\'\\\" src=\\\"{{message.audio}}\\\" autoplay></audio>\\n\t\t\t\t\t</div>\\n\t\t\t\t</div>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\t<div class=\\\"container hidden-sm-down fixed-bottom mb-5\\\">\\n\t\t<div class=\\\"row\\\">\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<form ng-submit=\\\"vm.submit()\\\">\\n\t\t\t\t\t<div class=\\\"input-group\\\">\\n\t\t\t\t\t\t<span class=\\\"input-group-btn\\\">\\n\t\t\t\t\t<button type=\\\"button\\\" ng-click=\\\"vm.toggleRecording()\\\" class=\\\"btn btn-lg\\\" ng-class=\\\"vm.isRecording() ? \\'btn-danger\\' : \\'btn-success\\'\\\">\\n\t\t\t\t\t\t<i class=\\\"fa fa-2x\\\" ng-class=\\\"vm.isRecording() ? \\'fa-microphone-slash\\' : \\'fa-microphone\\'\\\" aria-hidden=\\\"true\\\"></i>\\n\t\t\t</button>\\n\t\t\t\t</span>\\n\t\t\t\t\t\t<input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.text\\\" placeholder=\\\"{{ \\'home.form.placeholder\\' | translate }}\\\">\\n\t\t\t\t\t</div>\\n\t\t\t\t</form>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\t<div class=\\\"hidden-sm-up fixed-bottom\\\">\\n\t\t<div class=\\\"row\\\">\\n\t\t\t<div class=\\\"col\\\">\\n\t\t\t\t<form ng-submit=\\\"vm.submit()\\\">\\n\t\t\t\t\t<div class=\\\"input-group\\\">\\n\t\t\t\t\t\t<span class=\\\"input-group-btn\\\">\\n\t\t\t\t\t<button type=\\\"button\\\" ng-click=\\\"vm.toggleRecording()\\\" class=\\\"btn no-rounded\\\" ng-class=\\\"vm.isRecording() ? \\'btn-danger\\' : \\'btn-success\\'\\\">\\n\t\t\t\t\t\t<i class=\\\"fa fa-2x\\\" ng-class=\\\"vm.isRecording() ? \\'fa-microphone-slash\\' : \\'fa-microphone\\'\\\" aria-hidden=\\\"true\\\"></i>\\n\t\t\t</button>\\n\t\t\t\t</span>\\n\t\t\t\t\t\t<input type=\\\"text\\\" class=\\\"form-control no-rounded\\\" ng-model=\\\"vm.text\\\" placeholder=\\\"{{ \\'home.form.placeholder\\' | translate }}\\\">\\n\t\t\t\t\t</div>\\n\t\t\t\t</form>\\n\t\t\t</div>\\n\t\t</div>\\n\t</div>\\n\\n\\n</div>\\n\");\n$templateCache.put(\"app/settings/settings.html\",\"<div class=\\\"container mt-3\\\">\\n  <form>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.general.title\\\">General</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.general.name\\\">Bot Name</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" ng-model=\\\"vm.settings.general.name\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"language\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.general.language\\\">Language</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.general.language\\\" ng-options=\\\"it for it in vm.languages track by it\\\"></select>\\n      </div>\\n    </div>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.stt.title\\\">Speech To Text</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"stt_locale\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.locale\\\">Locale</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.stt.locale\\\" ng-options=\\\"it for it in vm.locales track by it\\\"></select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"sst_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.stt\\\" ng-options=\\\"it.name for it in vm.sttEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft BingSpeech</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"BingSpeech_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.BingSpeech.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"BingSpeech_subscription_key\\\" placeholder=\\\"The BingSpeech Subscription Key to use\\\" ng-model=\\\"vm.settings.BingSpeech.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.tts.title\\\">Text To Speech</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"tts_locale\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.locale\\\">Locale</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.tts.locale\\\" ng-options=\\\"it for it in vm.locales track by it\\\"></select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"tts_gender\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.tts.gender\\\">Gender</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.tts.gender\\\">\\n          <option value=\\\"female\\\" translate=\\\"global.gender.female\\\">Female</option>\\n          <option value=\\\"male\\\" translate=\\\"global.gender.male\\\">Male</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"tts_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.tts\\\" ng-options=\\\"it.name for it in vm.ttsEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft BingSpeech</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"BingSpeech_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.BingSpeech.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"BingSpeech_subscription_key\\\" placeholder=\\\"The BingSpeech Subscription Key to use\\\" ng-model=\\\"vm.settings.BingSpeech.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <h4 class=\\\"text-primary\\\" translate=\\\"settings.nlp.title\\\">Natural Language Processor</h4>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"nlp_engine\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.nlp.engine\\\">Engine</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.nlp\\\" ng-options=\\\"it.name for it in vm.nlpEngines track by it.name\\\"></select>\\n      </div>\\n    </div>\\n    <h5>Microsoft Luis</h5>\\n    <fieldset disabled=\\\"disabled\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label for=\\\"luis_subscription_key\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.Luis.subscriptionKey\\\">Subscription Key</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"luis_subscription_key\\\" placeholder=\\\"The Luis Subscription Key to use\\\" ng-model=\\\"vm.settings.Luis.subscriptionKey\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"application\\\" class=\\\"col-sm-2 col-form-label\\\" translate=\\\"settings.Luis.application\\\">Application</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" ng-model=\\\"vm.settings.Luis.application\\\" ng-options=\\\"it.name for it in vm.luisApplciations track by it.appId\\\"></select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"offset-sm-2 col-sm-10 text-right\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" ng-click=\\\"vm.reset()\\\"><i class=\\\"fa fa-times-circle\\\" aria-hidden=\\\"true\\\"></i>&nbsp;<span translate=\\\"settings.reset\\\">Reset</span></button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.save()\\\"><i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;<span translate=\\\"settings.save\\\">Save</span></button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\");}]);"]}